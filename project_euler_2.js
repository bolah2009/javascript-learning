// DISCLAIMER !!!
// Please do no use this solution to solve the Project Euler (https://projecteuler.net/) problems
// This repository is for personal development only in this regard
// Thanks!

// Even Fibonacci numbers

// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function fibonacciSequence(number) {
  let array = [1, 2];
  let i = 2;
  let evenSum = 0;
  while (i < number) {
    const index = array.length - 1;
    const lastNumber = array[index];
    const secondLastNumber = array[index - 1];
    const nextNumber = lastNumber + secondLastNumber;
    if (i % 2 == 0) {
      evenSum += i;
    }
    i = nextNumber + lastNumber;
    array.push(nextNumber);
  }
  return { array: array, evenSum: evenSum };
}
console.log(fibonacciSequence(4000000).evenSum);
